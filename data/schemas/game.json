{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Poker Game Configuration Schema",
  "type": "object",
  "definitions": {
    "cardSubsetAllowed": {
      "type": "object",
      "properties": {
        "subsets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of allowed subsets of a hand (player or community) for this combination"
        },
        "indices": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "List of indices for the allowed cards (optional)"
        }
      },
      "required": ["subsets"],
      "additionalProperties": false
    },
    "forcedBets": {
      "type": "object",
      "properties": {
        "style": {
          "type": "string",
          "description": "Style of forced bets (i.e., bring-in, blinds, antes)"
        },
        "rule": {
          "type": "string",
          "description": "Rule for hand evaluation for bring-in bets"
        },
        "variation": {
          "type": "string",
          "description": "Optional variation on the standard bring-in rules"
        },
        "bringInEval": {
          "type": "string",
          "description": "Evaluation type from bestHand to use for bring-in with 2+ cards (required for multi-hand games)"
        }            
      },
      "required": ["style", "rule"],
      "additionalProperties": false
    },     
    "bestHandItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the hand type"
        },
        "evaluationType": {
          "type": "string",
          "description": "Type of hand evaluation"
        },
        "holeCards": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            {
              "type": "integer"
            },
            {
              "type": "string",
              "enum": ["remaining"]
            }
          ],
          "description": "Number of hole cards required, list of indices, or 'remaining' for all remaining cards"
        },
        "communityCards": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            {
              "type": "integer"
            }
          ],
          "description": "Number of community cards required or list of indices"
        },
        "anyCards": {
          "type": "integer",
          "description": "Number of any cards required"
        },
        "hole_subset": {
          "type": "string",
          "description": "Specific subset of hole cards to use for this hand evaluation (e.g., 'Hold'em')"
        },
        "community_subset": {
          "type": "string",
          "description": "Specific subset of community cards to use for this hand evaluation (e.g., 'Board 1')"
        },        
        "holeCardsAllowed": {
          "type": "array",
          "items": {
              "type": "object",
              "properties": {
                  "hole_subsets": {
                      "type": "array",
                      "items": {"type": "string"},
                      "description": "List of hole card subsets forming a valid hand"
                  }
              },
              "required": ["hole_subsets"]
          }
        },
        "communityCardsAllowed": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "List of allowed community card subsets (simplified from cardSubsetAllowed)"
          },
          "description": "Simplified list of allowed community card subsets"
        },   
        "wildCards": {
          "type": "array",
          "description": "List of wild card rules that apply to this hand evaluation",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["joker", "rank", "lowest_community", "lowest_hole"],
                "description": "Specifies the wild card rule type"
              },
              "count": {
                "type": "integer",
                "description": "Number of wild cards (optional, e.g., number of Jokers)"
              },
              "rank": {
                "type": "string",
                "description": "Rank that is wild (only for type 'rank')"
              },
              "subset": {
                "type": "string",
                "description": "Subset of cards to evaluate (e.g., 'default', 'Board')"
              },
              "visibility": {
                "type": "string",
                "enum": ["face down", "face up"],
                "description": "Visibility condition for lowest_hole (e.g., 'face down')"
              },
              "match": {
                "type": "string",
                "enum": ["rank"],
                "description": "Match condition that defines wild cards (e.g., 'rank')"
              },
              "scope": {
                "type": "string",
                "enum": ["player", "global"],
                "description": "Scope of wildness (default is global)"
              },
              "role": {
                "type": "string",
                "enum": ["wild", "bug"],
                "description": "Wildness behavior: 'wild' (any card) or 'bug' (Ace or straight/flush)"
              }
            },
            "required": ["type", "role"],
            "additionalProperties": false
          }
        },
        "qualifier": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "Qualifier for the hand"
        },
        "padding": {
          "type": "boolean",
          "description": "If true, the poker engine pads out the holeCards to the specified length if there are fewer cards"
        },
        "minimumCards": {
          "type": "integer",
          "description": "The minimum number of cards required for the hand to qualify"
        },
        "zeroCardsPipValue": {
          "type": "integer",
          "description": "Pip value assigned to a hand with 0 cards (e.g., 0 for best low in American/Canadian Scarney)"
        },        
        "combinations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "holeCards": {
                "type": "integer",
                "description": "Number of hole cards to use in this combination"
              },
              "communityCards": {
                "type": "integer",
                "description": "Number of community cards to use in this combination"
              }
            },
            "required": ["holeCards", "communityCards"],
            "additionalProperties": false
          },
          "description": "List of allowed combinations of hole and community cards to form the hand"
        }
      },       
      "required": ["evaluationType"],
      "additionalProperties": false
    }
  },  
  "properties": {
    "game": {
      "type": "string",
      "description": "The name of the poker game"
    },
    "references": {
      "type": "array",
      "items": {
        "type": "string",
        "format": "uri"
      },
      "description": "Array of URLs pointing to descriptions or rules of the game"
    },
    "players": {
      "type": "object",
      "properties": {
        "min": {
          "type": "integer",
          "description": "Minimum number of players"
        },
        "max": {
          "type": "integer",
          "description": "Maximum number of players"
        }
      },
      "required": ["min", "max"],
      "additionalProperties": false
    },
    "deck": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["standard", "short_6a", "short_ta"],
          "description": "Type of deck: standard, short_6a (2-5 removed), short_ta (2-9 removed)"
        },
        "cards": {
          "type": "integer",
          "enum": [20, 36, 52],
          "description": "Number of cards in the deck"
        },
        "jokers": {
          "type": "integer",
          "description": "Number of jokers in the deck"
        }        
      },
      "required": ["type", "cards"],
      "additionalProperties": false
    },
    "bettingStructures": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of allowed betting structures"
    },
    "forcedBets": {
      "$ref": "#/definitions/forcedBets"
    },    
    "gamePlay": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the gameplay step"
          },
          "bet": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of bet"
              },
              "zeroCardsBetting": {
                "type": "string",
                "enum": ["call_only", "normal"],
                "description": "Betting restriction for players with 0 cards (e.g., 'call_only' for Canadian Scarney)"
              }
            },
            "required": ["type"],
            "additionalProperties": false
          },
          "deal": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Location of the deal (player or community)"
              },
              "cards": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "type": "integer",
                      "description": "Number of cards to deal"
                    },
                    "state": {
                      "type": "string",
                      "description": "State of the cards (face up or face down)"
                    },
                    "community_subset": {
                      "description": "Subset of community cards (e.g., 'Board', 'Discard')"
                    },
                    "subset": {
                      "type": "string",
                      "description": "Subset of cards (e.g., 'Board', 'Discard')"
                    }
                  },
                  "required": ["number", "state"]
                }
              }
            },
            "required": ["location", "cards"],
            "additionalProperties": false
          },
          "discard": {
            "type": "object",
            "properties": {
              "cards": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "rule": {
                      "type": "string",
                      "description": "Rule for discarding cards (e.g., 'matching ranks')"
                    },
                    "subset": { 
                      "type": "string",
                      "description": "Subset of cards to compare for the discard rule (e.g., 'Discard')"
                    },
                    "discardLocation": { 
                      "type": "string",
                      "enum": ["community", "discard_pile"],
                      "description": "Where to place discarded cards (e.g., 'community' for Scarney)"
                    },
                    "discardSubset": { 
                      "type": "string",
                      "description": "Subset of the discard location to place cards (e.g., 'Discard')"
                    },
                    "hole_subset": {
                      "type": "string",
                      "description": "Subset of cards to discard (e.g., 'Hand 1', or 'any' for any subset)"
                    },
                    "number": {
                      "type": "integer",
                      "description": "Number of cards to discard"
                    },
                    "state": {
                      "type": "string",
                      "description": "State of the discarded cards (face up or face down)"
                    },
                    "entire_subset": {
                      "type": "boolean",
                      "description": "If true, the discarded cards must be an entire named subset",
                      "default": false
                    }                    
                  },
                  "anyOf": [
                    { "required": ["hole_subset"] },
                    { "required": ["number"] },
                    { "required": ["rule", "subset"] } 
                  ],
                  "additionalProperties": false
                }
              }
            },
            "required": ["cards"],
            "additionalProperties": false
          },
          "draw": {
            "type": "object",
            "properties": {
              "cards": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "type": "integer",
                      "description": "Number of cards to draw"
                    },
                    "min_number": {
                      "type": "integer",
                      "description": "Minimum number of cards that must be drawn"
                    },                    
                    "state": {
                      "type": "string",
                      "description": "State of the cards (face up or face down)"
                    },
                    "hole_subset": {
                      "type": "string",
                      "description": "Subset of player's hand to draw from/to"
                    },
                    "draw_amount": {
                      "type": "object",
                      "properties": {
                        "relative_to": {
                          "type": "string",
                          "enum": ["discard"],
                          "description": "Specifies that the draw amount is relative to the discard amount"
                        },
                        "amount": {
                          "type": "integer",
                          "description": "The difference between the draw amount and the discard amount"
                        }
                      },
                      "required": ["relative_to", "amount"],
                      "additionalProperties": false
                    }
                  },
                  "required": ["number", "state"],
                  "additionalProperties": false
                }
              }
            },
            "required": ["cards"],
            "additionalProperties": false
          },          
          "remove": {
            "type": "object",
            "additionalProperties": true,
            "description": "Remove cards action"
          },
          "expose": {
            "type": "object",
            "properties": {
              "cards": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "type": "integer",
                      "description": "Number of cards to expose"
                    },
                    "state": {
                      "type": "string",
                      "description": "State of the cards (face up or face down)"
                    }
                  },
                  "required": ["number", "state"],
                  "additionalProperties": false
                }
              }
            },
            "required": ["cards"],
            "additionalProperties": false
          },
          "pass": {
            "type": "object",
            "properties": {
              "cards": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "type": "integer",
                      "description": "Number of cards to pass"
                    },
                    "direction": {
                      "type": "string",
                      "enum": ["left", "right", "across"],
                      "description": "Direction to pass the cards"
                    },
                    "state": {
                      "type": "string",
                      "enum": ["face up", "face down"],
                      "description": "State of the cards being passed"
                    }
                  },
                  "required": ["number", "direction", "state"],
                  "additionalProperties": false
                }
              }
            },
            "required": ["cards"],
            "additionalProperties": false
          },          
          "separate": {
            "type": "object",
            "properties": {
              "cards": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "hole_subset": {
                      "type": "string",
                      "description": "Name of the subset"
                    },
                    "number": {
                      "type": "integer",
                      "description": "Number of cards in the subset"
                    }
                  },
                  "required": ["hole_subset", "number"],
                  "additionalProperties": false
                }
              }
            },
            "required": ["cards"],
            "additionalProperties": false
          },
          "showdown": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of showdown"
              }
            },
            "required": ["type"],
            "additionalProperties": false
          }
        },
        "required": ["name"],
        "additionalProperties": false
      }
    },
    "showdown": {
      "type": "object",
      "properties": {
        "order": {
          "type": "string",
          "description": "Order of showdown"
        },
        "startingFrom": {
          "type": "string",
          "description": "Player starting the showdown"
        },
        "cardsRequired": {
          "type": "string",
          "description": "Description of cards required for showdown"
        },
        "bestHand": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bestHandItem"
          }
        },
        "defaultAction": {
          "type": "object",
          "properties": {
            "condition": {
              "type": "string",
              "description": "Condition for applying the default action"
            },
            "action": {
              "type": "string",
              "description": "Action to take when the condition is met"
            },
            "bestHand": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/bestHandItem"
              },
              "description": "Hand evaluation rules for the default action"
            }
          },
          "required": ["condition", "action"],
          "additionalProperties": false,
          "description": "Default action to take under specific conditions"
        }        
      },
      "required": ["order", "startingFrom", "cardsRequired", "bestHand"],
      "additionalProperties": false
    }
  },
  "required": ["game", "players", "deck", "bettingStructures", "gamePlay", "showdown"],
  "additionalProperties": false
}
